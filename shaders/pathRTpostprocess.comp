#version 460

layout(local_size_x = 16, local_size_y = 16) in;
layout(binding = 0, set = 0, rgba8) uniform image2D resultImage;
layout(binding = 1, set = 0, rgba8) uniform image2D image;
layout(binding = 2, set = 0) uniform UBO
{
    mat4 model;
    mat4 view;
    mat4 proj;
    mat4 modelIT;
    mat4 viewProjInverse;

    mat4 lightTransform;

    vec2 lightSize;
    vec2 pad0;

    vec3  lightE;
    float pad1;

    int   numIndirectBounces;
    int   samplesPerPixel;
    float lightSourceArea;
    float lightOtherE;

    int   numAOrays;
    float aoRayLength;
    uint  iteration;

    float time;
}
ubo;

void main()
{
    const int i     = int(gl_GlobalInvocationID.x);
    const int j     = int(gl_GlobalInvocationID.y);
    vec4      color = imageLoad(image, ivec2(i, j));

    //color /= vec4(ubo.iteration);
    if(color.w != 0.0)
    {
        color.xyz /= color.w;
    }
    color.xyz = pow(color.xyz, vec3(1.0 / 2.2));

    imageStore(resultImage, ivec2(i, j), color);
}
